@using WorkNCInfoService.Mvc5.ViewModel;
@model PagedList.IPagedList<AspUserWorkNc>
@using PagedList.Mvc;


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.Action("Search", "UserPermission")

<input type="button" value="Create" class="btn btn-success" title="Create" onclick="location.href='@Url.Action("Register","UserPermission")'" />

<table class="table">
    <tr class="td-border" style="background-color: green; color: white;">
        <th style="display:none;"></th>
        <th>
            <div class="colorSort">@Html.ActionLink("Username", "Index", new { sortOrder = ViewBag.UsernameSort, currentFilter = ViewBag.CurrentFilter })<span class="caret"></span></div>
        </th>
        <th>
            Email
        </th>
        <th>
            Approve
        </th>
        <th>
            Confirmed
        </th>
        <th>
            Web Permission
        </th>
        <th>
            App Permission
        </th>
        <th>
            Reset Password
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr data-username='@item.UserName' data-id='@item.Id' data-email='@item.EmailConfirmed'>
            <td class="td-border" style="display: none;">
                @Html.HiddenFor(modelItem => item.Id, new { id = "aspnetUserId" })
            </td>
            <td class="td-border">
                @*@Html.TextBoxFor(modelItem => item.UserName, new { id = "UserName", value=item.UserName, @readonly = "readonly" })*@
                <input id="userName" name="userName" value="@item.UserName" type="text" readonly="readonly" />
            </td>
            <td class="td-border">

                @Html.DisplayFor(modelItem => item.Email)

            </td>
            <td class="td-border">
                @if (item.EmailConfirmed.Equals(true))
                {
                    <i class="glyphicon glyphicon-ok"></i>
                }
                else
                {
                    <p> </p>
                }
            </td>
            <td class="td-border">

                @Html.HiddenFor(modelItem => item.EmailConfirmed, new { id = "EmailConfirm" })
                @if (item.EmailConfirmed.Equals(true))
                {
                    <a href="#" onclick="SetConfirmEmail(this);">Disapprove</a>
                }
                else
                {
                    @*@Html.ActionLink("Approve", "Index", new { onclick = "SetConfirmEmail(this);" })*@
                    <a href="#" onclick="SetConfirmEmail(this);">approve</a>
                }
            </td>
            <td class="td-border">
                @Html.DropDownListFor(modelItem => item.WebPermission, new SelectList(new List<Object>
                                                                                    {
                                                                                        new {value="", text="" },
                                                                                        new {value="Member", text="Member" },
                                                                                        new {value="Chief", text="Chief" }
                                                                                    }, "Value", "Text", 2),
                                                                         new { id = "WebPermission", onchange = "SetWebPermission(this);" })
            </td>
            <td class="td-border">
                @Html.CheckBoxFor(modelItem => item.AppPermission, new { id = "AppPermission", onclick = "SetAppPermission(this);" })
                @*<input id="AppPermission" type="checkbox" value="@item.EmailConfirm" onclick="SetAppPermission(this);"/>*@
            </td>
            <td class="td-border">
                <a href="#" onclick="SetResetPassword(this);">Reset Password</a>
            </td>
        </tr>
    }
</table>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

@section scripts{
    <script language="javascript">

        $(function () {
            //checkbox App Permission
            $('#AppPermission').change(function () {
                if ($(this).is(':checked')) {
                    $('#AppPermission').prop('checked', true);
                }
                else {
                    $('#AppPermission').prop('checked', false);
                }
            });

            // checkbox Loukout User
            $('#lockoutUser').change(function () {
                if ($(this).is(':checked')) {
                    $('#lockoutUser').prop('checked', true);
                }
                else {
                    $('#lockoutUser').prop('checked', false);
                }
            });
        });

        function SetConfirmEmail(e) {
            var users = {
                Id: $(e).parents('tr').data('id'),
                EmailConfirmed: $(e).parent('tr').data('email')
            }
            $.ajax({
                url: '/UserPermission/EmailConfirm',
                type: 'GET',
                contentType: "application/json; charset=utf-8",
                data: users,
                success: function (result) {
                    alert('Confirm success');
                    $('form').submit();                   
                }
            });
        }

        //Set WebPermission
        function SetWebPermission(e) {

            var users = {
                UserName: $(e).parents('tr').data('username'),
                WebPermission: $(e).val()
            }
            $.ajax({
                type: 'GET',
                url: '/UserPermission/SetWebPermission',
                contentType: "application/json; charset=utf-8",
                data: users,
                success: function (data) {
                    $('form').submit();
                }
            });
        }

        //Set AppPermission
        function SetAppPermission(e) {

            var users = {
                UserName: $(e).parents('tr').data('username'),
                AppPermission: $(e).val()
            }
            $.ajax({
                type: 'GET',
                url: '/UserPermission/SetAppPermission',
                contentType: "application/json; charset=utf-8",
                data: users,
                //dataType:'Json',
                success: function (data) {
                    $('form').submit();
                }
            });
        }
        //Reset password
        function SetResetPassword(e) {
            var users = {
                Id: $(e).parents('tr').data('id'),
                PasswordReset: $(e).val()
            }
            $.ajax({
                type: 'GET',
                url: '',
                contentType: "",
                data: users,
                success: function (data) {
                    $('form').submit();
                }
            });
        }
    </script>
}

<style>
    input#userName {
        border: none;
    }
</style>