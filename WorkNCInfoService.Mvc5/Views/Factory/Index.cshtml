@using WorkNCInfoService.Mvc5.Models.WorkModels;
@model PagedList.IPagedList<WorkNC_Factory>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div>
    @Html.Action("Search","Factory")
</div>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr class="td-border" style="background-color: green; color: white;">
        <th>
            <div class="colorSort">@Html.ActionLink("No", "Index", new { sortOrder = ViewBag.NoSort, currentFilter = ViewBag.CurrentFilter })<span class="caret"></span></div>
        </th>
        
        <th>
            <div class="colorSort">@Html.ActionLink("Company", "Index", new { sortOrder = ViewBag.NameSort, currentFilter = ViewBag.CurrentFilter })<span class="caret"></span></div>
        </th>
        <th>
            Status
        </th>

        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td class="td-border">
            @Html.DisplayFor(modelItem => item.No)
        </td>
        <td class="td-border">
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td class="td-border">
            @if(item.isDeleted.Equals(false))
            {
                <p>Normal</p>
            }
            else
            {
                <p>Deleted</p>
            }
        <td class="td-border">
            @Html.ActionLink("Edit", "Edit", new { id=item.FactoryId }) 
            @Html.ActionLink("Details", "Details", new { id=item.FactoryId }) 
            @Html.ActionLink("Delete", "Delete", new { id=item.FactoryId })
        </td>
    </tr>
}

</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page=>Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter}))

@section scripts{
    <script language="javascript">
        $('#isDeleted').change(function () {
            if ($(this).is(":checked")) {
                $('#isDeleted').prop('checked', true);
            }
            else {
                $('#isDeleted').prop('checked', false);
            }
        });
        //$('#chkFactory').change(function () {
        //    if ($(this).is(":checked")) {
        //        $.ajax({
        //            type: 'GET',
        //            url: '/Factory/Index',
        //            dataType: 'Json',
        //            data: { isDeleted: $('chkFactory').val() },
        //            success: function (data) {
        //                $('#chkFactory').prop('checked', true);
        //            }
        //        });
        //    }

        //    else {
        //        $.ajax({
        //            type: 'GET',
        //            url: '/Factory/Index',
        //            dataType: 'Json',
        //            data: { isDeleted: $('chkFactory').val() },
        //            success: function (data) {
        //                $('#chkFactory').prop('checked', false);
        //            }
        //        });
        //    }
        //});

    </script>
}