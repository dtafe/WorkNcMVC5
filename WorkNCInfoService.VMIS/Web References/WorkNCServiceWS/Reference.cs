//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
// 
#pragma warning disable 1591

namespace WorkNCInfoService.VMIS.WorkNCServiceWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TestWorkNCServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseDomainOfWorkZoneDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseDomainOfWorkZone))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseDomainOfMachine))]
    public partial class TestWorkNCService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback TestLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestGetListFactoryStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestGetListWorkZoneStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestGetListWorkZoneDetailListOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestUpdateDetailStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestGetAllFileProblemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListMachineFromUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadWorkZoneOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TestWorkNCService() {
            this.Url = global::WorkNCInfoService.VMIS.Properties.Settings.Default.WorkNCInfoService_VMIS_WorkNCServiceWS_TestWorkNCService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event TestLoginCompletedEventHandler TestLoginCompleted;
        
        /// <remarks/>
        public event TestGetListFactoryStatusCompletedEventHandler TestGetListFactoryStatusCompleted;
        
        /// <remarks/>
        public event TestGetListWorkZoneStatusCompletedEventHandler TestGetListWorkZoneStatusCompleted;
        
        /// <remarks/>
        public event TestGetListWorkZoneDetailListCompletedEventHandler TestGetListWorkZoneDetailListCompleted;
        
        /// <remarks/>
        public event TestUpdateDetailStatusCompletedEventHandler TestUpdateDetailStatusCompleted;
        
        /// <remarks/>
        public event TestGetAllFileProblemCompletedEventHandler TestGetAllFileProblemCompleted;
        
        /// <remarks/>
        public event GetListMachineFromUserCompletedEventHandler GetListMachineFromUserCompleted;
        
        /// <remarks/>
        public event UploadWorkZoneCompletedEventHandler UploadWorkZoneCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestLogin(string userName, string password) {
            object[] results = this.Invoke("TestLogin", new object[] {
                        userName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestLoginAsync(string userName, string password) {
            this.TestLoginAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void TestLoginAsync(string userName, string password, object userState) {
            if ((this.TestLoginOperationCompleted == null)) {
                this.TestLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestLoginOperationCompleted);
            }
            this.InvokeAsync("TestLogin", new object[] {
                        userName,
                        password}, this.TestLoginOperationCompleted, userState);
        }
        
        private void OnTestLoginOperationCompleted(object arg) {
            if ((this.TestLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestLoginCompleted(this, new TestLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestGetListFactoryStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FactoryStatus[] TestGetListFactoryStatus(string factoryName, string dateFrom, string dateTo) {
            object[] results = this.Invoke("TestGetListFactoryStatus", new object[] {
                        factoryName,
                        dateFrom,
                        dateTo});
            return ((FactoryStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void TestGetListFactoryStatusAsync(string factoryName, string dateFrom, string dateTo) {
            this.TestGetListFactoryStatusAsync(factoryName, dateFrom, dateTo, null);
        }
        
        /// <remarks/>
        public void TestGetListFactoryStatusAsync(string factoryName, string dateFrom, string dateTo, object userState) {
            if ((this.TestGetListFactoryStatusOperationCompleted == null)) {
                this.TestGetListFactoryStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestGetListFactoryStatusOperationCompleted);
            }
            this.InvokeAsync("TestGetListFactoryStatus", new object[] {
                        factoryName,
                        dateFrom,
                        dateTo}, this.TestGetListFactoryStatusOperationCompleted, userState);
        }
        
        private void OnTestGetListFactoryStatusOperationCompleted(object arg) {
            if ((this.TestGetListFactoryStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestGetListFactoryStatusCompleted(this, new TestGetListFactoryStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestGetListWorkZoneStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkZoneStatus[] TestGetListWorkZoneStatus(int factoryId) {
            object[] results = this.Invoke("TestGetListWorkZoneStatus", new object[] {
                        factoryId});
            return ((WorkZoneStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void TestGetListWorkZoneStatusAsync(int factoryId) {
            this.TestGetListWorkZoneStatusAsync(factoryId, null);
        }
        
        /// <remarks/>
        public void TestGetListWorkZoneStatusAsync(int factoryId, object userState) {
            if ((this.TestGetListWorkZoneStatusOperationCompleted == null)) {
                this.TestGetListWorkZoneStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestGetListWorkZoneStatusOperationCompleted);
            }
            this.InvokeAsync("TestGetListWorkZoneStatus", new object[] {
                        factoryId}, this.TestGetListWorkZoneStatusOperationCompleted, userState);
        }
        
        private void OnTestGetListWorkZoneStatusOperationCompleted(object arg) {
            if ((this.TestGetListWorkZoneStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestGetListWorkZoneStatusCompleted(this, new TestGetListWorkZoneStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestGetListWorkZoneDetailList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkZoneDetailList[] TestGetListWorkZoneDetailList(int workZoneId) {
            object[] results = this.Invoke("TestGetListWorkZoneDetailList", new object[] {
                        workZoneId});
            return ((WorkZoneDetailList[])(results[0]));
        }
        
        /// <remarks/>
        public void TestGetListWorkZoneDetailListAsync(int workZoneId) {
            this.TestGetListWorkZoneDetailListAsync(workZoneId, null);
        }
        
        /// <remarks/>
        public void TestGetListWorkZoneDetailListAsync(int workZoneId, object userState) {
            if ((this.TestGetListWorkZoneDetailListOperationCompleted == null)) {
                this.TestGetListWorkZoneDetailListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestGetListWorkZoneDetailListOperationCompleted);
            }
            this.InvokeAsync("TestGetListWorkZoneDetailList", new object[] {
                        workZoneId}, this.TestGetListWorkZoneDetailListOperationCompleted, userState);
        }
        
        private void OnTestGetListWorkZoneDetailListOperationCompleted(object arg) {
            if ((this.TestGetListWorkZoneDetailListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestGetListWorkZoneDetailListCompleted(this, new TestGetListWorkZoneDetailListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestUpdateDetailStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestUpdateDetailStatus(int id, int status, string userName) {
            object[] results = this.Invoke("TestUpdateDetailStatus", new object[] {
                        id,
                        status,
                        userName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestUpdateDetailStatusAsync(int id, int status, string userName) {
            this.TestUpdateDetailStatusAsync(id, status, userName, null);
        }
        
        /// <remarks/>
        public void TestUpdateDetailStatusAsync(int id, int status, string userName, object userState) {
            if ((this.TestUpdateDetailStatusOperationCompleted == null)) {
                this.TestUpdateDetailStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestUpdateDetailStatusOperationCompleted);
            }
            this.InvokeAsync("TestUpdateDetailStatus", new object[] {
                        id,
                        status,
                        userName}, this.TestUpdateDetailStatusOperationCompleted, userState);
        }
        
        private void OnTestUpdateDetailStatusOperationCompleted(object arg) {
            if ((this.TestUpdateDetailStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestUpdateDetailStatusCompleted(this, new TestUpdateDetailStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestGetAllFileProblem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DetailProblem[] TestGetAllFileProblem(int id) {
            object[] results = this.Invoke("TestGetAllFileProblem", new object[] {
                        id});
            return ((DetailProblem[])(results[0]));
        }
        
        /// <remarks/>
        public void TestGetAllFileProblemAsync(int id) {
            this.TestGetAllFileProblemAsync(id, null);
        }
        
        /// <remarks/>
        public void TestGetAllFileProblemAsync(int id, object userState) {
            if ((this.TestGetAllFileProblemOperationCompleted == null)) {
                this.TestGetAllFileProblemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestGetAllFileProblemOperationCompleted);
            }
            this.InvokeAsync("TestGetAllFileProblem", new object[] {
                        id}, this.TestGetAllFileProblemOperationCompleted, userState);
        }
        
        private void OnTestGetAllFileProblemOperationCompleted(object arg) {
            if ((this.TestGetAllFileProblemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestGetAllFileProblemCompleted(this, new TestGetAllFileProblemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListMachineFromUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Machine[] GetListMachineFromUser(string userName, string password) {
            object[] results = this.Invoke("GetListMachineFromUser", new object[] {
                        userName,
                        password});
            return ((Machine[])(results[0]));
        }
        
        /// <remarks/>
        public void GetListMachineFromUserAsync(string userName, string password) {
            this.GetListMachineFromUserAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void GetListMachineFromUserAsync(string userName, string password, object userState) {
            if ((this.GetListMachineFromUserOperationCompleted == null)) {
                this.GetListMachineFromUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListMachineFromUserOperationCompleted);
            }
            this.InvokeAsync("GetListMachineFromUser", new object[] {
                        userName,
                        password}, this.GetListMachineFromUserOperationCompleted, userState);
        }
        
        private void OnGetListMachineFromUserOperationCompleted(object arg) {
            if ((this.GetListMachineFromUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListMachineFromUserCompleted(this, new GetListMachineFromUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadWorkZone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadWorkZone(WorkZone workZoneInfo, WorkZoneDetail[] listWorkZoneDetail) {
            this.Invoke("UploadWorkZone", new object[] {
                        workZoneInfo,
                        listWorkZoneDetail});
        }
        
        /// <remarks/>
        public void UploadWorkZoneAsync(WorkZone workZoneInfo, WorkZoneDetail[] listWorkZoneDetail) {
            this.UploadWorkZoneAsync(workZoneInfo, listWorkZoneDetail, null);
        }
        
        /// <remarks/>
        public void UploadWorkZoneAsync(WorkZone workZoneInfo, WorkZoneDetail[] listWorkZoneDetail, object userState) {
            if ((this.UploadWorkZoneOperationCompleted == null)) {
                this.UploadWorkZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadWorkZoneOperationCompleted);
            }
            this.InvokeAsync("UploadWorkZone", new object[] {
                        workZoneInfo,
                        listWorkZoneDetail}, this.UploadWorkZoneOperationCompleted, userState);
        }
        
        private void OnUploadWorkZoneOperationCompleted(object arg) {
            if ((this.UploadWorkZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadWorkZoneCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FactoryStatus {
        
        private int factoryIdField;
        
        private string factoryNameField;
        
        private string imageFileField;
        
        private int inProcessField;
        
        private int finishedField;
        
        private int problemField;
        
        /// <remarks/>
        public int FactoryId {
            get {
                return this.factoryIdField;
            }
            set {
                this.factoryIdField = value;
            }
        }
        
        /// <remarks/>
        public string FactoryName {
            get {
                return this.factoryNameField;
            }
            set {
                this.factoryNameField = value;
            }
        }
        
        /// <remarks/>
        public string ImageFile {
            get {
                return this.imageFileField;
            }
            set {
                this.imageFileField = value;
            }
        }
        
        /// <remarks/>
        public int InProcess {
            get {
                return this.inProcessField;
            }
            set {
                this.inProcessField = value;
            }
        }
        
        /// <remarks/>
        public int Finished {
            get {
                return this.finishedField;
            }
            set {
                this.finishedField = value;
            }
        }
        
        /// <remarks/>
        public int Problem {
            get {
                return this.problemField;
            }
            set {
                this.problemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkZoneDetail))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BaseDomainOfWorkZoneDetail {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class WorkZoneDetail : BaseDomainOfWorkZoneDetail {
        
        private string base64DataField;
        
        private int idField;
        
        private int workZoneIdField;
        
        private string noField;
        
        private string nCFileNameField;
        
        private string pathTypeField;
        
        private System.Nullable<double> toolDiaField;
        
        private System.Nullable<double> toolConerRField;
        
        private System.Nullable<double> toolLenthField;
        
        private System.Nullable<double> tnoField;
        
        private System.Nullable<double> stockAllowanceField;
        
        private System.Nullable<double> toleranceField;
        
        private System.Nullable<double> spindllField;
        
        private System.Nullable<double> feedRateField;
        
        private System.Nullable<double> zminField;
        
        private System.Nullable<double> cutDistanceField;
        
        private string machineTimeField;
        
        private string commentField;
        
        private int statusField;
        
        private string imageFileField;
        
        private System.DateTime createDateField;
        
        private string createAccountField;
        
        private System.DateTime modifiedDateField;
        
        private string modifiedAccountField;
        
        /// <remarks/>
        public string Base64Data {
            get {
                return this.base64DataField;
            }
            set {
                this.base64DataField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int WorkZoneId {
            get {
                return this.workZoneIdField;
            }
            set {
                this.workZoneIdField = value;
            }
        }
        
        /// <remarks/>
        public string No {
            get {
                return this.noField;
            }
            set {
                this.noField = value;
            }
        }
        
        /// <remarks/>
        public string NCFileName {
            get {
                return this.nCFileNameField;
            }
            set {
                this.nCFileNameField = value;
            }
        }
        
        /// <remarks/>
        public string PathType {
            get {
                return this.pathTypeField;
            }
            set {
                this.pathTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> ToolDia {
            get {
                return this.toolDiaField;
            }
            set {
                this.toolDiaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> ToolConerR {
            get {
                return this.toolConerRField;
            }
            set {
                this.toolConerRField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> ToolLenth {
            get {
                return this.toolLenthField;
            }
            set {
                this.toolLenthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Tno {
            get {
                return this.tnoField;
            }
            set {
                this.tnoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> StockAllowance {
            get {
                return this.stockAllowanceField;
            }
            set {
                this.stockAllowanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Tolerance {
            get {
                return this.toleranceField;
            }
            set {
                this.toleranceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Spindll {
            get {
                return this.spindllField;
            }
            set {
                this.spindllField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> FeedRate {
            get {
                return this.feedRateField;
            }
            set {
                this.feedRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Zmin {
            get {
                return this.zminField;
            }
            set {
                this.zminField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> CutDistance {
            get {
                return this.cutDistanceField;
            }
            set {
                this.cutDistanceField = value;
            }
        }
        
        /// <remarks/>
        public string MachineTime {
            get {
                return this.machineTimeField;
            }
            set {
                this.machineTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string ImageFile {
            get {
                return this.imageFileField;
            }
            set {
                this.imageFileField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public string CreateAccount {
            get {
                return this.createAccountField;
            }
            set {
                this.createAccountField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public string ModifiedAccount {
            get {
                return this.modifiedAccountField;
            }
            set {
                this.modifiedAccountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkZone))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BaseDomainOfWorkZone {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class WorkZone : BaseDomainOfWorkZone {
        
        private string base64DataField;
        
        private int workZoneIdField;
        
        private int companyIdField;
        
        private int factoryIdField;
        
        private int machineIdField;
        
        private string nameField;
        
        private string workZonePathField;
        
        private string modelDataProgramerField;
        
        private string nCDataProgramerField;
        
        private System.Nullable<System.DateTime> programDateField;
        
        private string modelNameField;
        
        private string partsField;
        
        private string partNameField;
        
        private string machiningTimeTotalField;
        
        private string commentField;
        
        private int statusField;
        
        private string imageFileField;
        
        private System.DateTime createDateField;
        
        private string createAccountField;
        
        private System.DateTime modifiedDateField;
        
        private string modifiedAccountField;
        
        /// <remarks/>
        public string Base64Data {
            get {
                return this.base64DataField;
            }
            set {
                this.base64DataField = value;
            }
        }
        
        /// <remarks/>
        public int WorkZoneId {
            get {
                return this.workZoneIdField;
            }
            set {
                this.workZoneIdField = value;
            }
        }
        
        /// <remarks/>
        public int CompanyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
            }
        }
        
        /// <remarks/>
        public int FactoryId {
            get {
                return this.factoryIdField;
            }
            set {
                this.factoryIdField = value;
            }
        }
        
        /// <remarks/>
        public int MachineId {
            get {
                return this.machineIdField;
            }
            set {
                this.machineIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string WorkZonePath {
            get {
                return this.workZonePathField;
            }
            set {
                this.workZonePathField = value;
            }
        }
        
        /// <remarks/>
        public string ModelDataProgramer {
            get {
                return this.modelDataProgramerField;
            }
            set {
                this.modelDataProgramerField = value;
            }
        }
        
        /// <remarks/>
        public string NCDataProgramer {
            get {
                return this.nCDataProgramerField;
            }
            set {
                this.nCDataProgramerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ProgramDate {
            get {
                return this.programDateField;
            }
            set {
                this.programDateField = value;
            }
        }
        
        /// <remarks/>
        public string ModelName {
            get {
                return this.modelNameField;
            }
            set {
                this.modelNameField = value;
            }
        }
        
        /// <remarks/>
        public string Parts {
            get {
                return this.partsField;
            }
            set {
                this.partsField = value;
            }
        }
        
        /// <remarks/>
        public string PartName {
            get {
                return this.partNameField;
            }
            set {
                this.partNameField = value;
            }
        }
        
        /// <remarks/>
        public string MachiningTimeTotal {
            get {
                return this.machiningTimeTotalField;
            }
            set {
                this.machiningTimeTotalField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string ImageFile {
            get {
                return this.imageFileField;
            }
            set {
                this.imageFileField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public string CreateAccount {
            get {
                return this.createAccountField;
            }
            set {
                this.createAccountField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public string ModifiedAccount {
            get {
                return this.modifiedAccountField;
            }
            set {
                this.modifiedAccountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Machine))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BaseDomainOfMachine {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Machine : BaseDomainOfMachine {
        
        private int machineIdField;
        
        private int companyIdField;
        
        private int factoryIdField;
        
        private string noField;
        
        private string nameField;
        
        private bool isDeletedField;
        
        private System.DateTime createDateField;
        
        private string createAccountField;
        
        private System.DateTime modifiedDateField;
        
        private string modifiedAccountField;
        
        /// <remarks/>
        public int MachineId {
            get {
                return this.machineIdField;
            }
            set {
                this.machineIdField = value;
            }
        }
        
        /// <remarks/>
        public int CompanyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
            }
        }
        
        /// <remarks/>
        public int FactoryId {
            get {
                return this.factoryIdField;
            }
            set {
                this.factoryIdField = value;
            }
        }
        
        /// <remarks/>
        public string No {
            get {
                return this.noField;
            }
            set {
                this.noField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool isDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                this.isDeletedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public string CreateAccount {
            get {
                return this.createAccountField;
            }
            set {
                this.createAccountField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public string ModifiedAccount {
            get {
                return this.modifiedAccountField;
            }
            set {
                this.modifiedAccountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DetailProblem {
        
        private int idField;
        
        private int fileIdField;
        
        private string imageFileField;
        
        private string userNameField;
        
        private string commentField;
        
        private string base64DataField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int FileId {
            get {
                return this.fileIdField;
            }
            set {
                this.fileIdField = value;
            }
        }
        
        /// <remarks/>
        public string ImageFile {
            get {
                return this.imageFileField;
            }
            set {
                this.imageFileField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string Base64Data {
            get {
                return this.base64DataField;
            }
            set {
                this.base64DataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class WorkZoneDetailList {
        
        private int idField;
        
        private string workZoneNameField;
        
        private string pathTypeField;
        
        private string imageFileField;
        
        private string toolDiaField;
        
        private string toolConerRField;
        
        private string stockAllowanceField;
        
        private string nCFileNameField;
        
        private string machineTimeField;
        
        private string cutDistanceField;
        
        private string feedRateField;
        
        private string spindllField;
        
        private int statusField;
        
        private string toolLenthField;
        
        private string tnoField;
        
        private string toleranceField;
        
        private string zminField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string WorkZoneName {
            get {
                return this.workZoneNameField;
            }
            set {
                this.workZoneNameField = value;
            }
        }
        
        /// <remarks/>
        public string PathType {
            get {
                return this.pathTypeField;
            }
            set {
                this.pathTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ImageFile {
            get {
                return this.imageFileField;
            }
            set {
                this.imageFileField = value;
            }
        }
        
        /// <remarks/>
        public string ToolDia {
            get {
                return this.toolDiaField;
            }
            set {
                this.toolDiaField = value;
            }
        }
        
        /// <remarks/>
        public string ToolConerR {
            get {
                return this.toolConerRField;
            }
            set {
                this.toolConerRField = value;
            }
        }
        
        /// <remarks/>
        public string StockAllowance {
            get {
                return this.stockAllowanceField;
            }
            set {
                this.stockAllowanceField = value;
            }
        }
        
        /// <remarks/>
        public string NCFileName {
            get {
                return this.nCFileNameField;
            }
            set {
                this.nCFileNameField = value;
            }
        }
        
        /// <remarks/>
        public string MachineTime {
            get {
                return this.machineTimeField;
            }
            set {
                this.machineTimeField = value;
            }
        }
        
        /// <remarks/>
        public string CutDistance {
            get {
                return this.cutDistanceField;
            }
            set {
                this.cutDistanceField = value;
            }
        }
        
        /// <remarks/>
        public string FeedRate {
            get {
                return this.feedRateField;
            }
            set {
                this.feedRateField = value;
            }
        }
        
        /// <remarks/>
        public string Spindll {
            get {
                return this.spindllField;
            }
            set {
                this.spindllField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string ToolLenth {
            get {
                return this.toolLenthField;
            }
            set {
                this.toolLenthField = value;
            }
        }
        
        /// <remarks/>
        public string Tno {
            get {
                return this.tnoField;
            }
            set {
                this.tnoField = value;
            }
        }
        
        /// <remarks/>
        public string Tolerance {
            get {
                return this.toleranceField;
            }
            set {
                this.toleranceField = value;
            }
        }
        
        /// <remarks/>
        public string Zmin {
            get {
                return this.zminField;
            }
            set {
                this.zminField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class WorkZoneStatus {
        
        private int workZoneIdField;
        
        private int statusIdField;
        
        private string statusField;
        
        private string imageFileField;
        
        private string workZoneNameField;
        
        private string uploadField;
        
        private string machineField;
        
        private string dateField;
        
        private string operatorField;
        
        /// <remarks/>
        public int WorkZoneId {
            get {
                return this.workZoneIdField;
            }
            set {
                this.workZoneIdField = value;
            }
        }
        
        /// <remarks/>
        public int StatusId {
            get {
                return this.statusIdField;
            }
            set {
                this.statusIdField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string ImageFile {
            get {
                return this.imageFileField;
            }
            set {
                this.imageFileField = value;
            }
        }
        
        /// <remarks/>
        public string WorkZoneName {
            get {
                return this.workZoneNameField;
            }
            set {
                this.workZoneNameField = value;
            }
        }
        
        /// <remarks/>
        public string Upload {
            get {
                return this.uploadField;
            }
            set {
                this.uploadField = value;
            }
        }
        
        /// <remarks/>
        public string Machine {
            get {
                return this.machineField;
            }
            set {
                this.machineField = value;
            }
        }
        
        /// <remarks/>
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string Operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void TestLoginCompletedEventHandler(object sender, TestLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void TestGetListFactoryStatusCompletedEventHandler(object sender, TestGetListFactoryStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestGetListFactoryStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestGetListFactoryStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FactoryStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FactoryStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void TestGetListWorkZoneStatusCompletedEventHandler(object sender, TestGetListWorkZoneStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestGetListWorkZoneStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestGetListWorkZoneStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkZoneStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkZoneStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void TestGetListWorkZoneDetailListCompletedEventHandler(object sender, TestGetListWorkZoneDetailListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestGetListWorkZoneDetailListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestGetListWorkZoneDetailListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkZoneDetailList[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkZoneDetailList[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void TestUpdateDetailStatusCompletedEventHandler(object sender, TestUpdateDetailStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestUpdateDetailStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestUpdateDetailStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void TestGetAllFileProblemCompletedEventHandler(object sender, TestGetAllFileProblemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestGetAllFileProblemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestGetAllFileProblemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DetailProblem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DetailProblem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetListMachineFromUserCompletedEventHandler(object sender, GetListMachineFromUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListMachineFromUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListMachineFromUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Machine[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Machine[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UploadWorkZoneCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591